{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appInsightsName": {
            "type": "string",
            "defaultValue": "appInsightsName",
            "metadata": {
                "description": "Name of the App Insights containing availability test"
            }
        },
        "searchQuery": {
            "type": "string",
            "defaultValue": "requests\n| where success == false",
            "metadata": {
                "description": "Search query that is used to search in Log Analytics"
            }
        },
        "searchQueryAlertName": {
            "type": "string",
            "defaultValue": "alertName",
            "minLength": 1,
            "metadata": {
                "description": "Name of the alert"
            }
        },
        "alertSeverity": {
            "type": "int",
            "defaultValue": 1,
            "allowedValues": [
                0,
                1,
                2,
                3,
                4
            ],
            "metadata": {
                "description": "Severity of alert {0,1,2,3,4}"
            }
        },
        "alertRuleEnabled": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Specifies whether the alert is enabled"
            }
        },
        "triggerThreshold": {
            "type": "string",
            "defaultValue": "10",
            "metadata": {
                "description": "The threshold that is used to trigger the alert"
            }
        },
        "actionGroupId": {
            "type": "string",
            "metadata": {
                "description": "The name of the action group that will be used to get the action group's ID and is triggered when the alert is activated or deactivated"
            }
        }
    },
    "variables": {
        "searchQueryAlertName": "[toLower(concat(parameters('searchQueryAlertName'), '-', parameters('appInsightsName')))]",
        "alertRuleEnabled": "[string(parameters('alertRuleEnabled'))]",
        "triggerThreshold": "[int(parameters('triggerThreshold'))]"

    },
    "resources": [
        {
            "type": "Microsoft.Insights/scheduledQueryRules",
            "apiVersion": "2018-04-16",
            "name": "[variables('searchQueryAlertName')]",
            "location": "westeurope",
            "dependsOn": [],
            "tags": {
                "[concat('hidden-link:', resourceId('microsoft.insights/components/', parameters('appInsightsName')))]": "Resource"
            },
            "properties": {
                "enabled": "[variables('alertRuleEnabled')]",
                "source": {
                    "query": "[parameters('searchQuery')]",
                    "authorizedResources": [],
                    "dataSourceId": "[resourceId('microsoft.insights/components',  parameters('appInsightsName'))]",
                    "queryType": "ResultCount"
                },
                "schedule": {
                    "frequencyInMinutes": 5,
                    "timeWindowInMinutes": 5
                },
                "action": {
                    "severity": "[parameters('alertSeverity')]",
                    "aznsAction": {
                        "actionGroup": [
                            "[parameters('actionGroupId')]"
                        ],
                        "emailSubject": null,
                        "customWebhookPayload": null
                    },
                    "trigger": {
                        "thresholdOperator": "GreaterThan",
                        "threshold": "[variables('triggerThreshold')]"
                    },
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction"
                }
            }
        }
    ],
    "outputs": {}
}